Unfortunately, Apache POI does not support reading equations from .docx files directly. Equations in Word are stored as Office MathML (OMML), a form of XML, and Apache POI currently does not have a built-in way to parse this.


I apologize for the confusion. The code provided was a basic example of how you might approach the problem. It checks if the paragraph contains the string "<m:oMath", which is a part of the Office MathML (OMML) markup used for equations in Word documents. However, this is a very rudimentary check and might not work in all cases.

Unfortunately, Apache POI does not provide a direct way to extract equations from Word documents. The equations are stored as OMML in the Word document, and Apache POI does not currently support parsing this format.

If you need to extract equations from Word documents, you might need to use a more complex approach, such as using a different library that supports OMML, or converting the Word document to a different format that allows easier extraction of equations.


This code will print the raw XML for any paragraphs that contain equations. You would then need to extract the <m:oMath> elements from this XML and convert them to MathML using another library.

Unfortunately, there's no direct way to convert OMML to MathML in Java. You might need to use XSLT (a language for transforming XML documents into other XML documents) for this conversion. Microsoft provides an XSLT stylesheet for converting OMML to MathML.

Once you have the MathML, you can display it in an HTML page using a JavaScript library like MathJax.

Please note that this is a complex task and may require a good understanding of XML, XSLT, and MathML. Also, displaying MathML in an HTML page is not supported by all browsers. You may need to use a JavaScript library like MathJax to display the MathML correctly.

Unfortunately, there are no Java libraries that directly support the extraction of OMML from Word documents. However, you can use a workaround by converting the Word document to a different format that allows easier extraction of equations.

One such approach is to convert the Word document to HTML using the mammoth.js library. This library can convert .docx documents to HTML or plain text and preserves equations in the MathML format, which can be displayed in an HTML page.

I apologize for the confusion. The mammoth.js library does not support the conversion of Word equations to MathML out of the box. This is because Word equations are stored in a format called Office MathML (OMML), which is different from standard MathML.

To convert Word equations to MathML, you would need to convert the OMML to MathML. Unfortunately, there is no straightforward way to do this in JavaScript. You might need to use an XSLT processor to apply an XSLT stylesheet that converts OMML to MathML. Microsoft provides such a stylesheet, but using it in JavaScript might be complex and beyond the scope of this platform.

As an alternative, you could consider using a different tool or library that supports OMML. For example, the pandoc command-line tool can convert Word documents to HTML and supports OMML equations. However, this would require installing pandoc and running it from the command line or a script, which might not be ideal for your use case.